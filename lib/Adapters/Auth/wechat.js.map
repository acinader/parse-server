{"version":3,"sources":["../../../src/Adapters/Auth/wechat.js"],"names":["https","require","Parse","validateAuthData","authData","graphRequest","access_token","id","then","data","errcode","Error","OBJECT_NOT_FOUND","validateAppId","Promise","resolve","path","reject","get","res","on","chunk","JSON","parse","e","module","exports"],"mappings":";;AAAA;AACA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AACA,IAAIC,QAAQD,QAAQ,YAAR,EAAsBC,KAAlC;;AAEA;AACA,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AAClC,SAAOC,aAAa,uBAAuBD,SAASE,YAAhC,GAA+C,UAA/C,GAA4DF,SAASG,EAAlF,EAAsFC,IAAtF,CAA2F,UAAUC,IAAV,EAAgB;AAChH,QAAIA,KAAKC,OAAL,IAAgB,CAApB,EAAuB;AACrB;AACD;AACD,UAAM,IAAIR,MAAMS,KAAV,CAAgBT,MAAMS,KAAN,CAAYC,gBAA5B,EAA8C,uCAA9C,CAAN;AACD,GALM,CAAP;AAMD;;AAED;AACA,SAASC,aAAT,GAAyB;AACvB,SAAOC,QAAQC,OAAR,EAAP;AACD;;AAED;AACA,SAASV,YAAT,CAAsBW,IAAtB,EAA4B;AAC1B,SAAO,IAAIF,OAAJ,CAAY,UAAUC,OAAV,EAAmBE,MAAnB,EAA2B;AAC5CjB,UAAMkB,GAAN,CAAU,mCAAmCF,IAA7C,EAAmD,UAAUG,GAAV,EAAe;AAChE,UAAIV,OAAO,EAAX;AACAU,UAAIC,EAAJ,CAAO,MAAP,EAAe,UAAUC,KAAV,EAAiB;AAC9BZ,gBAAQY,KAAR;AACD,OAFD;AAGAF,UAAIC,EAAJ,CAAO,KAAP,EAAc,YAAY;AACxB,YAAI;AACFX,iBAAOa,KAAKC,KAAL,CAAWd,IAAX,CAAP;AACD,SAFD,CAEE,OAAMe,CAAN,EAAS;AACT,iBAAOP,OAAOO,CAAP,CAAP;AACD;AACDT,gBAAQN,IAAR;AACD,OAPD;AAQD,KAbD,EAaGW,EAbH,CAaM,OAbN,EAae,YAAY;AACzBH,aAAO,mDAAP;AACD,KAfD;AAgBD,GAjBM,CAAP;AAkBD;;AAEDQ,OAAOC,OAAP,GAAiB;AACfb,eADe;AAEfV;AAFe,CAAjB","file":"wechat.js","sourcesContent":["// Helper functions for accessing the WeChat Graph API.\nvar https = require('https');\nvar Parse = require('parse/node').Parse;\n\n// Returns a promise that fulfills iff this user id is valid.\nfunction validateAuthData(authData) {\n  return graphRequest('auth?access_token=' + authData.access_token + '&openid=' + authData.id).then(function (data) {\n    if (data.errcode == 0) {\n      return;\n    }\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'wechat auth is invalid for this user.');\n  });\n}\n\n// Returns a promise that fulfills if this app id is valid.\nfunction validateAppId() {\n  return Promise.resolve();\n}\n\n// A promisey wrapper for WeChat graph requests.\nfunction graphRequest(path) {\n  return new Promise(function (resolve, reject) {\n    https.get('https://api.weixin.qq.com/sns/' + path, function (res) {\n      var data = '';\n      res.on('data', function (chunk) {\n        data += chunk;\n      });\n      res.on('end', function () {\n        try {\n          data = JSON.parse(data);\n        } catch(e) {\n          return reject(e);\n        }\n        resolve(data);\n      });\n    }).on('error', function () {\n      reject('Failed to validate this access token with wechat.');\n    });\n  });\n}\n\nmodule.exports = {\n  validateAppId,\n  validateAuthData\n};\n"]}