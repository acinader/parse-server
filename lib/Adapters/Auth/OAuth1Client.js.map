{"version":3,"sources":["../../../src/Adapters/Auth/OAuth1Client.js"],"names":["https","require","crypto","Parse","OAuth","options","Error","INTERNAL_SERVER_ERROR","consumer_key","consumer_secret","auth_token","auth_token_secret","host","oauth_params","prototype","send","method","path","params","body","request","buildRequest","Promise","resolve","reject","httpRequest","res","data","on","chunk","JSON","parse","write","end","indexOf","Object","keys","length","buildParameterString","toUpperCase","oauth_consumer_key","signRequest","get","post","encode","str","toString","encodeURIComponent","replace","signatureMethod","version","nonce","text","possible","i","charAt","Math","floor","random","obj","sort","map","key","join","buildSignatureString","url","parameters","signature","createHmac","update","digest","oauth_parameters","oauth_nonce","oauth_timestamp","Date","getTime","oauth_signature_method","oauth_version","signatureParams","parametersToMerge","k","parameterString","signatureString","signatureKey","oauth_signature","headers","authHeader","value","Authorization","module","exports"],"mappings":"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","file":"OAuth1Client.js","sourcesContent":["var https = require('https'),\n  crypto = require('crypto');\nvar Parse = require('parse/node').Parse;\n\nvar OAuth = function(options) {\n  if(!options) {\n    throw new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR, 'No options passed to OAuth');\n  }\n  this.consumer_key = options.consumer_key;\n  this.consumer_secret = options.consumer_secret;\n  this.auth_token = options.auth_token;\n  this.auth_token_secret = options.auth_token_secret;\n  this.host = options.host;\n  this.oauth_params = options.oauth_params || {};\n};\n\nOAuth.prototype.send = function(method, path, params, body){\n\n  var request = this.buildRequest(method, path, params, body);\n  // Encode the body properly, the current Parse Implementation don't do it properly\n  return new Promise(function(resolve, reject) {\n    var httpRequest = https.request(request, function(res) {\n      var data = '';\n      res.on('data', function(chunk) {\n        data += chunk;\n      });\n      res.on('end', function() {\n        data = JSON.parse(data);\n        resolve(data);\n      });\n    }).on('error', function() {\n      reject('Failed to make an OAuth request');\n    });\n    if (request.body) {\n      httpRequest.write(request.body);\n    }\n    httpRequest.end();\n  });\n};\n\nOAuth.prototype.buildRequest = function(method, path, params, body) {\n  if (path.indexOf(\"/\") != 0) {\n    path = \"/\" + path;\n  }\n  if (params && Object.keys(params).length > 0) {\n    path += \"?\" + OAuth.buildParameterString(params);\n  }\n\n  var request = {\n    host:   this.host,\n    path: \tpath,\n    method: method.toUpperCase()\n  };\n\n  var oauth_params = this.oauth_params || {};\n  oauth_params.oauth_consumer_key = this.consumer_key;\n  if(this.auth_token){\n    oauth_params[\"oauth_token\"] = this.auth_token;\n  }\n\n  request = OAuth.signRequest(request, oauth_params, this.consumer_secret,  this.auth_token_secret);\n\n  if (body && Object.keys(body).length > 0) {\n    request.body = OAuth.buildParameterString(body);\n  }\n  return request;\n}\n\nOAuth.prototype.get = function(path, params) {\n  return this.send(\"GET\", path, params);\n}\n\nOAuth.prototype.post = function(path, params, body) {\n  return this.send(\"POST\", path, params, body);\n}\n\n/*\n\tProper string %escape encoding\n*/\nOAuth.encode = function(str) {\n  //       discuss at: http://phpjs.org/functions/rawurlencode/\n  //      original by: Brett Zamir (http://brett-zamir.me)\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Michael Grier\n  //         input by: Ratheous\n  //      bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Joris\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //             note: This reflects PHP 5.3/6.0+ behavior\n  //             note: Please be aware that this function expects to encode into UTF-8 encoded strings, as found on\n  //             note: pages served as UTF-8\n  //        example 1: rawurlencode('Kevin van Zonneveld!');\n  //        returns 1: 'Kevin%20van%20Zonneveld%21'\n  //        example 2: rawurlencode('http://kevin.vanzonneveld.net/');\n  //        returns 2: 'http%3A%2F%2Fkevin.vanzonneveld.net%2F'\n  //        example 3: rawurlencode('http://www.google.nl/search?q=php.js&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu:en-US:unofficial&client=firefox-a');\n  //        returns 3: 'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3Dphp.js%26ie%3Dutf-8%26oe%3Dutf-8%26aq%3Dt%26rls%3Dcom.ubuntu%3Aen-US%3Aunofficial%26client%3Dfirefox-a'\n\n  str = (str + '')\n    .toString();\n\n  // Tilde should be allowed unescaped in future versions of PHP (as reflected below), but if you want to reflect current\n  // PHP behavior, you would need to add \".replace(/~/g, '%7E');\" to the following.\n  return encodeURIComponent(str)\n    .replace(/!/g, '%21')\n    .replace(/'/g, '%27')\n    .replace(/\\(/g, '%28')\n    .replace(/\\)/g, '%29')\n    .replace(/\\*/g, '%2A');\n}\n\nOAuth.signatureMethod = \"HMAC-SHA1\";\nOAuth.version = \"1.0\";\n\n/*\n\tGenerate a nonce\n*/\nOAuth.nonce = function(){\n  var text = \"\";\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for(var i = 0; i < 30; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n}\n\nOAuth.buildParameterString = function(obj){\n  // Sort keys and encode values\n  if (obj) {\n    var keys = Object.keys(obj).sort();\n\n    // Map key=value, join them by &\n    return keys.map(function(key){\n      return key + \"=\" + OAuth.encode(obj[key]);\n    }).join(\"&\");\n  }\n\n  return \"\";\n}\n\n/*\n\tBuild the signature string from the object\n*/\n\nOAuth.buildSignatureString = function(method, url, parameters){\n  return [method.toUpperCase(), OAuth.encode(url), OAuth.encode(parameters)].join(\"&\");\n}\n\n/*\n\tRetuns encoded HMAC-SHA1 from key and text\n*/\nOAuth.signature = function(text, key){\n  crypto = require(\"crypto\");\n  return OAuth.encode(crypto.createHmac('sha1', key).update(text).digest('base64'));\n}\n\nOAuth.signRequest = function(request, oauth_parameters, consumer_secret, auth_token_secret){\n  oauth_parameters = oauth_parameters || {};\n\n  // Set default values\n  if (!oauth_parameters.oauth_nonce) {\n    oauth_parameters.oauth_nonce = OAuth.nonce();\n  }\n  if (!oauth_parameters.oauth_timestamp) {\n    oauth_parameters.oauth_timestamp = Math.floor(new Date().getTime() / 1000);\n  }\n  if (!oauth_parameters.oauth_signature_method) {\n    oauth_parameters.oauth_signature_method = OAuth.signatureMethod;\n  }\n  if (!oauth_parameters.oauth_version) {\n    oauth_parameters.oauth_version = OAuth.version;\n  }\n\n  if(!auth_token_secret){\n    auth_token_secret = \"\";\n  }\n  // Force GET method if unset\n  if (!request.method) {\n    request.method = \"GET\"\n  }\n\n  // Collect  all the parameters in one signatureParameters object\n  var signatureParams = {};\n  var parametersToMerge = [request.params, request.body, oauth_parameters];\n  for(var i in parametersToMerge) {\n    var parameters = parametersToMerge[i];\n    for(var k in parameters) {\n      signatureParams[k] = parameters[k];\n    }\n  }\n\n  // Create a string based on the parameters\n  var parameterString = OAuth.buildParameterString(signatureParams);\n\n  // Build the signature string\n  var url = \"https://\" + request.host + \"\" + request.path;\n\n  var signatureString = OAuth.buildSignatureString(request.method, url, parameterString);\n  // Hash the signature string\n  var signatureKey = [OAuth.encode(consumer_secret), OAuth.encode(auth_token_secret)].join(\"&\");\n\n  var signature = OAuth.signature(signatureString, signatureKey);\n\n  // Set the signature in the params\n  oauth_parameters.oauth_signature = signature;\n  if(!request.headers){\n    request.headers = {};\n  }\n\n  // Set the authorization header\n  var authHeader = Object.keys(oauth_parameters).sort().map(function(key){\n    var value = oauth_parameters[key];\n    return key + '=\"' + value + '\"';\n  }).join(\", \")\n\n  request.headers.Authorization = 'OAuth ' + authHeader;\n\n  // Set the content type header\n  request.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n  return request;\n\n}\n\nmodule.exports = OAuth;\n"]}