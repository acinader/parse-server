{"version":3,"sources":["../../../src/Adapters/Auth/instagram.js"],"names":["https","require","Parse","validateAuthData","authData","request","access_token","then","response","data","id","Error","OBJECT_NOT_FOUND","validateAppId","Promise","resolve","path","reject","get","res","on","chunk","JSON","parse","module","exports"],"mappings":";;AAAA;AACA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AACA,IAAIC,QAAQD,QAAQ,YAAR,EAAsBC,KAAlC;;AAEA;AACA,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AAClC,SAAOC,QAAQ,8BAA8BD,SAASE,YAA/C,EACJC,IADI,CACEC,QAAD,IAAc;AAClB,QAAIA,YAAYA,SAASC,IAArB,IAA6BD,SAASC,IAAT,CAAcC,EAAd,IAAoBN,SAASM,EAA9D,EAAkE;AAChE;AACD;AACD,UAAM,IAAIR,MAAMS,KAAV,CACJT,MAAMS,KAAN,CAAYC,gBADR,EAEJ,0CAFI,CAAN;AAGD,GARI,CAAP;AASD;;AAED;AACA,SAASC,aAAT,GAAyB;AACvB,SAAOC,QAAQC,OAAR,EAAP;AACD;;AAED;AACA,SAASV,OAAT,CAAiBW,IAAjB,EAAuB;AACrB,SAAO,IAAIF,OAAJ,CAAY,UAASC,OAAT,EAAkBE,MAAlB,EAA0B;AAC3CjB,UAAMkB,GAAN,CAAU,kCAAkCF,IAA5C,EAAkD,UAASG,GAAT,EAAc;AAC9D,UAAIV,OAAO,EAAX;AACAU,UAAIC,EAAJ,CAAO,MAAP,EAAe,UAASC,KAAT,EAAgB;AAC7BZ,gBAAQY,KAAR;AACD,OAFD;AAGAF,UAAIC,EAAJ,CAAO,KAAP,EAAc,YAAW;AACvBX,eAAOa,KAAKC,KAAL,CAAWd,IAAX,CAAP;AACAM,gBAAQN,IAAR;AACD,OAHD;AAID,KATD,EASGW,EATH,CASM,OATN,EASe,YAAW;AACxBH,aAAO,sDAAP;AACD,KAXD;AAYD,GAbM,CAAP;AAcD;;AAEDO,OAAOC,OAAP,GAAiB;AACfZ,iBAAeA,aADA;AAEfV,oBAAkBA;AAFH,CAAjB","file":"instagram.js","sourcesContent":["// Helper functions for accessing the instagram API.\nvar https = require('https');\nvar Parse = require('parse/node').Parse;\n\n// Returns a promise that fulfills iff this user id is valid.\nfunction validateAuthData(authData) {\n  return request(\"users/self/?access_token=\" + authData.access_token)\n    .then((response) => {\n      if (response && response.data && response.data.id == authData.id) {\n        return;\n      }\n      throw new Parse.Error(\n        Parse.Error.OBJECT_NOT_FOUND,\n        'Instagram auth is invalid for this user.');\n    });\n}\n\n// Returns a promise that fulfills iff this app id is valid.\nfunction validateAppId() {\n  return Promise.resolve();\n}\n\n// A promisey wrapper for api requests\nfunction request(path) {\n  return new Promise(function(resolve, reject) {\n    https.get(\"https://api.instagram.com/v1/\" + path, function(res) {\n      var data = '';\n      res.on('data', function(chunk) {\n        data += chunk;\n      });\n      res.on('end', function() {\n        data = JSON.parse(data);\n        resolve(data);\n      });\n    }).on('error', function() {\n      reject('Failed to validate this access token with Instagram.');\n    });\n  });\n}\n\nmodule.exports = {\n  validateAppId: validateAppId,\n  validateAuthData: validateAuthData\n};\n"]}