{"version":3,"sources":["../../../src/Adapters/Analytics/AnalyticsAdapter.js"],"names":["AnalyticsAdapter","appOpened","parameters","req","Promise","resolve","trackEvent","eventName"],"mappings":";;;;;AAAA;AACO,MAAMA,gBAAN,CAAuB;;AAE5B;;;;AAIAC,YAAUC,UAAV,EAAsBC,GAAtB,EAA2B;AACzB,WAAOC,QAAQC,OAAR,CAAgB,EAAhB,CAAP;AACD;;AAED;;;;;AAKAC,aAAWC,SAAX,EAAsBL,UAAtB,EAAkCC,GAAlC,EAAuC;AACrC,WAAOC,QAAQC,OAAR,CAAgB,EAAhB,CAAP;AACD;AAjB2B;;QAAjBL,gB,GAAAA,gB;kBAoBEA,gB","file":"AnalyticsAdapter.js","sourcesContent":["/*eslint no-unused-vars: \"off\"*/\nexport class AnalyticsAdapter {\n\n  /*\n  @param parameters: the analytics request body, analytics info will be in the dimensions property\n  @param req: the original http request\n   */\n  appOpened(parameters, req) {\n    return Promise.resolve({});\n  }\n\n  /*\n  @param eventName: the name of the custom eventName\n  @param parameters: the analytics request body, analytics info will be in the dimensions property\n  @param req: the original http request\n   */\n  trackEvent(eventName, parameters, req) {\n    return Promise.resolve({});\n  }\n}\n\nexport default AnalyticsAdapter;\n"]}