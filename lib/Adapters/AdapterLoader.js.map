{"version":3,"sources":["../../src/Adapters/AdapterLoader.js"],"names":["loadAdapter","adapter","defaultAdapter","options","undefined","e","name","Adapter","require","default","module","class"],"mappings":";;;;;QAAgBA,W,GAAAA,W;AAAT,SAASA,WAAT,CAAqBC,OAArB,EAA8BC,cAA9B,EAA8CC,OAA9C,EAAuD;AAC5D,MAAI,CAACF,OAAL,EAAc;AACZ,QAAI,CAACC,cAAL,EAAqB;AACnB,aAAOC,OAAP;AACD;AACD;AACA,WAAOH,YAAYE,cAAZ,EAA4BE,SAA5B,EAAuCD,OAAvC,CAAP;AACD,GAND,MAMO,IAAI,OAAOF,OAAP,KAAmB,UAAvB,EAAmC;AACxC,QAAI;AACF,aAAOA,QAAQE,OAAR,CAAP;AACD,KAFD,CAEE,OAAME,CAAN,EAAS;AACT,UAAIA,EAAEC,IAAF,KAAW,WAAf,EAA4B;AAC1B,YAAIC,UAAUN,OAAd;AACA,eAAO,IAAIM,OAAJ,CAAYJ,OAAZ,CAAP;AACD,OAHD,MAGO;AACL,cAAME,CAAN;AACD;AACF;AACF,GAXM,MAWA,IAAI,OAAOJ,OAAP,KAAmB,QAAvB,EAAiC;AACtC;AACAA,cAAUO,QAAQP,OAAR,CAAV;AACA;AACA,QAAIA,QAAQQ,OAAZ,EAAqB;AACnBR,gBAAUA,QAAQQ,OAAlB;AACD;AACD,WAAOT,YAAYC,OAAZ,EAAqBG,SAArB,EAAgCD,OAAhC,CAAP;AACD,GARM,MAQA,IAAIF,QAAQS,MAAZ,EAAoB;AACzB,WAAOV,YAAYC,QAAQS,MAApB,EAA4BN,SAA5B,EAAuCH,QAAQE,OAA/C,CAAP;AACD,GAFM,MAEA,IAAIF,QAAQU,KAAZ,EAAmB;AACxB,WAAOX,YAAYC,QAAQU,KAApB,EAA2BP,SAA3B,EAAsCH,QAAQE,OAA9C,CAAP;AACD,GAFM,MAEA,IAAIF,QAAQA,OAAZ,EAAqB;AAC1B,WAAOD,YAAYC,QAAQA,OAApB,EAA6BG,SAA7B,EAAwCH,QAAQE,OAAhD,CAAP;AACD;AACD;AACA,SAAOF,OAAP;AACD;;kBAEcD,W","file":"AdapterLoader.js","sourcesContent":["export function loadAdapter(adapter, defaultAdapter, options) {\n  if (!adapter) {\n    if (!defaultAdapter) {\n      return options;\n    }\n    // Load from the default adapter when no adapter is set\n    return loadAdapter(defaultAdapter, undefined, options);\n  } else if (typeof adapter === \"function\") {\n    try {\n      return adapter(options);\n    } catch(e) {\n      if (e.name === 'TypeError') {\n        var Adapter = adapter;\n        return new Adapter(options);\n      } else {\n        throw e;\n      }\n    }\n  } else if (typeof adapter === \"string\") {\n    /* eslint-disable */\n    adapter = require(adapter);\n    // If it's define as a module, get the default\n    if (adapter.default) {\n      adapter = adapter.default;\n    }\n    return loadAdapter(adapter, undefined, options);\n  } else if (adapter.module) {\n    return loadAdapter(adapter.module, undefined, adapter.options);\n  } else if (adapter.class) {\n    return loadAdapter(adapter.class, undefined, adapter.options);\n  } else if (adapter.adapter) {\n    return loadAdapter(adapter.adapter, undefined, adapter.options);\n  }\n  // return the adapter as provided\n  return adapter;\n}\n\nexport default loadAdapter;\n"]}