{"version":3,"sources":["../../src/Routers/CloudCodeRouter.js"],"names":["triggers","require","middleware","formatJobSchedule","job_schedule","startAfter","Date","toISOString","validateJobSchedule","config","jobs","getJobs","applicationId","jobName","Parse","Error","INTERNAL_SERVER_ERROR","CloudCodeRouter","PromiseRouter","mountRoutes","route","promiseEnforceMasterKeyAccess","getJobsData","createJob","editJob","deleteJob","req","rest","find","auth","then","scheduledJobs","response","results","in_use","map","job","Object","keys","body","create","client","objectId","params","update","del"],"mappings":"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","file":"CloudCodeRouter.js","sourcesContent":["import PromiseRouter  from '../PromiseRouter';\nimport Parse          from 'parse/node';\nimport rest           from '../rest';\nconst triggers        = require('../triggers');\nconst middleware      = require('../middlewares');\n\nfunction formatJobSchedule(job_schedule) {\n  if (typeof job_schedule.startAfter === 'undefined') {\n    job_schedule.startAfter = new Date().toISOString();\n  }\n  return job_schedule;\n}\n\nfunction validateJobSchedule(config, job_schedule) {\n  const jobs = triggers.getJobs(config.applicationId) || {};\n  if (job_schedule.jobName && !jobs[job_schedule.jobName]) {\n    throw new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR, 'Cannot Schedule a job that is not deployed');\n  }\n}\n\nexport class CloudCodeRouter extends PromiseRouter {\n  mountRoutes() {\n    this.route('GET', '/cloud_code/jobs', middleware.promiseEnforceMasterKeyAccess, CloudCodeRouter.getJobs);\n    this.route('GET', '/cloud_code/jobs/data', middleware.promiseEnforceMasterKeyAccess, CloudCodeRouter.getJobsData);\n    this.route('POST', '/cloud_code/jobs', middleware.promiseEnforceMasterKeyAccess, CloudCodeRouter.createJob);\n    this.route('PUT', '/cloud_code/jobs/:objectId', middleware.promiseEnforceMasterKeyAccess, CloudCodeRouter.editJob);\n    this.route('DELETE', '/cloud_code/jobs/:objectId', middleware.promiseEnforceMasterKeyAccess, CloudCodeRouter.deleteJob);\n  }\n\n  static getJobs(req) {\n    return rest.find(req.config, req.auth, '_JobSchedule', {}, {}).then((scheduledJobs) => {\n      return {\n        response: scheduledJobs.results\n      }\n    });\n  }\n\n  static getJobsData(req) {\n    const config = req.config;\n    const jobs = triggers.getJobs(config.applicationId) || {};\n    return rest.find(req.config, req.auth, '_JobSchedule', {}, {}).then((scheduledJobs) => {\n      return {\n        response: {\n          in_use: scheduledJobs.results.map((job) => job.jobName),\n          jobs: Object.keys(jobs),\n        }\n      };\n    });\n  }\n\n  static createJob(req) {\n    const { job_schedule } = req.body;\n    validateJobSchedule(req.config, job_schedule);\n    return rest.create(req.config, req.auth, '_JobSchedule', formatJobSchedule(job_schedule), req.client);\n  }\n\n  static editJob(req) {\n    const { objectId } = req.params;\n    const { job_schedule } = req.body;\n    validateJobSchedule(req.config, job_schedule);\n    return rest.update(req.config, req.auth, '_JobSchedule', { objectId }, formatJobSchedule(job_schedule)).then((response) => {\n      return {\n        response\n      }\n    });\n  }\n\n  static deleteJob(req) {\n    const { objectId } = req.params;\n    return rest.del(req.config, req.auth, '_JobSchedule', objectId).then((response) => {\n      return {\n        response\n      }\n    });\n  }\n}\n"]}