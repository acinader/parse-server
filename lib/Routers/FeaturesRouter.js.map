{"version":3,"sources":["../../src/Routers/FeaturesRouter.js"],"names":["middleware","FeaturesRouter","PromiseRouter","mountRoutes","route","promiseEnforceMasterKeyAccess","req","features","globalConfig","create","read","update","delete","hooks","cloudCode","jobs","logs","level","size","order","until","from","push","immediatePush","config","hasPushSupport","scheduledPush","hasPushScheduledSupport","storedPushData","pushAudiences","localization","schemas","addField","removeField","addClass","removeClass","clearAllDataFromClass","exportClass","editClassLevelPermissions","editPointerPermissions","response","parseServerVersion","version"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;IAAYA,U;;;;;;AAEL,MAAMC,cAAN,SAA6BC,uBAA7B,CAA2C;AAChDC,gBAAc;AACZ,SAAKC,KAAL,CAAW,KAAX,EAAiB,aAAjB,EAAgCJ,WAAWK,6BAA3C,EAA0EC,OAAO;AAC/E,YAAMC,WAAW;AACfC,sBAAc;AACZC,kBAAQ,IADI;AAEZC,gBAAM,IAFM;AAGZC,kBAAQ,IAHI;AAIZC,kBAAQ;AAJI,SADC;AAOfC,eAAO;AACLJ,kBAAQ,IADH;AAELC,gBAAM,IAFD;AAGLC,kBAAQ,IAHH;AAILC,kBAAQ;AAJH,SAPQ;AAafE,mBAAW;AACTC,gBAAM;AADG,SAbI;AAgBfC,cAAM;AACJC,iBAAO,IADH;AAEJC,gBAAM,IAFF;AAGJC,iBAAO,IAHH;AAIJC,iBAAO,IAJH;AAKJC,gBAAM;AALF,SAhBS;AAuBfC,cAAM;AACJC,yBAAejB,IAAIkB,MAAJ,CAAWC,cADtB;AAEJC,yBAAepB,IAAIkB,MAAJ,CAAWG,uBAFtB;AAGJC,0BAAgBtB,IAAIkB,MAAJ,CAAWC,cAHvB;AAIJI,yBAAe,IAJX;AAKJC,wBAAc;AALV,SAvBS;AA8BfC,iBAAS;AACPC,oBAAU,IADH;AAEPC,uBAAa,IAFN;AAGPC,oBAAU,IAHH;AAIPC,uBAAa,IAJN;AAKPC,iCAAuB,IALhB;AAMPC,uBAAa,KANN;AAOPC,qCAA2B,IAPpB;AAQPC,kCAAwB;AARjB;AA9BM,OAAjB;;AA0CA,aAAO,EAAEC,UAAU;AACjBjC,oBAAUA,QADO;AAEjBkC,8BAAoBC;AAFH,SAAZ,EAAP;AAID,KA/CD;AAgDD;AAlD+C;QAArCzC,c,GAAAA,c","file":"FeaturesRouter.js","sourcesContent":["import { version }     from '../../package.json';\nimport PromiseRouter   from '../PromiseRouter';\nimport * as middleware from \"../middlewares\";\n\nexport class FeaturesRouter extends PromiseRouter {\n  mountRoutes() {\n    this.route('GET','/serverInfo', middleware.promiseEnforceMasterKeyAccess, req => {\n      const features = {\n        globalConfig: {\n          create: true,\n          read: true,\n          update: true,\n          delete: true,\n        },\n        hooks: {\n          create: true,\n          read: true,\n          update: true,\n          delete: true,\n        },\n        cloudCode: {\n          jobs: true,\n        },\n        logs: {\n          level: true,\n          size: true,\n          order: true,\n          until: true,\n          from: true,\n        },\n        push: {\n          immediatePush: req.config.hasPushSupport,\n          scheduledPush: req.config.hasPushScheduledSupport,\n          storedPushData: req.config.hasPushSupport,\n          pushAudiences: true,\n          localization: true,\n        },\n        schemas: {\n          addField: true,\n          removeField: true,\n          addClass: true,\n          removeClass: true,\n          clearAllDataFromClass: true,\n          exportClass: false,\n          editClassLevelPermissions: true,\n          editPointerPermissions: true,\n        },\n      };\n\n      return { response: {\n        features: features,\n        parseServerVersion: version,\n      } };\n    });\n  }\n}\n"]}