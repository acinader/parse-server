{"version":3,"sources":["../../src/Routers/AggregateRouter.js"],"names":["middleware","BASE_KEYS","PIPELINE_KEYS","ALLOWED_KEYS","AggregateRouter","ClassesRouter","handleFind","req","body","Object","assign","JSONFromQuery","query","options","pipeline","Array","isArray","map","stage","stageName","keys","transformStage","stages","push","distinct","String","where","JSON","parse","rest","find","config","auth","className","info","clientSDK","then","response","result","results","UsersRouter","removeHiddenProperties","indexOf","Parse","Error","INVALID_QUERY","hasOwnProperty","_id","objectId","mountRoutes","route","promiseEnforceMasterKeyAccess"],"mappings":"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","file":"AggregateRouter.js","sourcesContent":["import ClassesRouter from './ClassesRouter';\nimport rest from '../rest';\nimport * as middleware from '../middlewares';\nimport Parse         from 'parse/node';\nimport UsersRouter   from './UsersRouter';\n\nconst BASE_KEYS = ['where', 'distinct'];\n\nconst PIPELINE_KEYS = [\n  'addFields',\n  'bucket',\n  'bucketAuto',\n  'collStats',\n  'count',\n  'currentOp',\n  'facet',\n  'geoNear',\n  'graphLookup',\n  'group',\n  'indexStats',\n  'limit',\n  'listLocalSessions',\n  'listSessions',\n  'lookup',\n  'match',\n  'out',\n  'project',\n  'redact',\n  'replaceRoot',\n  'sample',\n  'skip',\n  'sort',\n  'sortByCount',\n  'unwind',\n];\n\nconst ALLOWED_KEYS = [...BASE_KEYS, ...PIPELINE_KEYS];\n\nexport class AggregateRouter extends ClassesRouter {\n\n  handleFind(req) {\n    const body = Object.assign(req.body, ClassesRouter.JSONFromQuery(req.query));\n    const options = {};\n    let pipeline = [];\n\n    if (Array.isArray(body)) {\n      pipeline = body.map((stage) => {\n        const stageName = Object.keys(stage)[0];\n        return this.transformStage(stageName, stage);\n      });\n    } else {\n      const stages = [];\n      for (const stageName in body) {\n        stages.push(this.transformStage(stageName, body));\n      }\n      pipeline = stages;\n    }\n    if (body.distinct) {\n      options.distinct = String(body.distinct);\n    }\n    options.pipeline = pipeline;\n    if (typeof body.where === 'string') {\n      body.where = JSON.parse(body.where);\n    }\n    return rest.find(req.config, req.auth, this.className(req), body.where, options, req.info.clientSDK).then((response) => {\n      for(const result of response.results) {\n        if(typeof result === 'object') {\n          UsersRouter.removeHiddenProperties(result);\n        }\n      }\n      return { response };\n    });\n  }\n\n  transformStage(stageName, stage) {\n    if (ALLOWED_KEYS.indexOf(stageName) === -1) {\n      throw new Parse.Error(\n        Parse.Error.INVALID_QUERY,\n        `Invalid parameter for query: ${stageName}`\n      );\n    }\n    if (stageName === 'group') {\n      if (stage[stageName].hasOwnProperty('_id')) {\n        throw new Parse.Error(\n          Parse.Error.INVALID_QUERY,\n          `Invalid parameter for query: group. Please use objectId instead of _id`\n        );\n      }\n      if (!stage[stageName].hasOwnProperty('objectId')) {\n        throw new Parse.Error(\n          Parse.Error.INVALID_QUERY,\n          `Invalid parameter for query: group. objectId is required`\n        );\n      }\n      stage[stageName]._id = stage[stageName].objectId;\n      delete stage[stageName].objectId;\n    }\n    return { [`$${stageName}`]: stage[stageName] };\n  }\n\n  mountRoutes() {\n    this.route('GET','/aggregate/:className', middleware.promiseEnforceMasterKeyAccess, req => { return this.handleFind(req); });\n  }\n}\n\nexport default AggregateRouter;\n"]}