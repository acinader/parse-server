{"version":3,"sources":["../../src/Routers/AudiencesRouter.js"],"names":["middleware","AudiencesRouter","ClassesRouter","className","handleFind","req","body","Object","assign","JSONFromQuery","query","options","optionsFromBody","rest","find","config","auth","where","info","clientSDK","then","response","results","forEach","item","JSON","parse","handleGet","data","mountRoutes","route","promiseEnforceMasterKeyAccess","handleCreate","handleUpdate","handleDelete"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;IAAYA,U;;;;;;AAEL,MAAMC,eAAN,SAA8BC,uBAA9B,CAA4C;;AAEjDC,cAAY;AACV,WAAO,WAAP;AACD;;AAEDC,aAAWC,GAAX,EAAgB;AACd,UAAMC,OAAOC,OAAOC,MAAP,CAAcH,IAAIC,IAAlB,EAAwBJ,wBAAcO,aAAd,CAA4BJ,IAAIK,KAAhC,CAAxB,CAAb;AACA,UAAMC,UAAUT,wBAAcU,eAAd,CAA8BN,IAA9B,CAAhB;;AAEA,WAAOO,eAAKC,IAAL,CAAUT,IAAIU,MAAd,EAAsBV,IAAIW,IAA1B,EAAgC,WAAhC,EAA6CV,KAAKW,KAAlD,EAAyDN,OAAzD,EAAkEN,IAAIa,IAAJ,CAASC,SAA3E,EACJC,IADI,CACEC,QAAD,IAAc;;AAElBA,eAASC,OAAT,CAAiBC,OAAjB,CAA0BC,IAAD,IAAU;AACjCA,aAAKd,KAAL,GAAae,KAAKC,KAAL,CAAWF,KAAKd,KAAhB,CAAb;AACD,OAFD;;AAIA,aAAO,EAACW,UAAUA,QAAX,EAAP;AACD,KARI,CAAP;AASD;;AAEDM,YAAUtB,GAAV,EAAe;AACb,WAAO,MAAMsB,SAAN,CAAgBtB,GAAhB,EACJe,IADI,CACEQ,IAAD,IAAU;AACdA,WAAKP,QAAL,CAAcX,KAAd,GAAsBe,KAAKC,KAAL,CAAWE,KAAKP,QAAL,CAAcX,KAAzB,CAAtB;;AAEA,aAAOkB,IAAP;AACD,KALI,CAAP;AAMD;;AAEDC,gBAAc;AACZ,SAAKC,KAAL,CAAW,KAAX,EAAiB,iBAAjB,EAAoC9B,WAAW+B,6BAA/C,EAA8E1B,OAAO;AAAE,aAAO,KAAKD,UAAL,CAAgBC,GAAhB,CAAP;AAA8B,KAArH;AACA,SAAKyB,KAAL,CAAW,KAAX,EAAiB,2BAAjB,EAA8C9B,WAAW+B,6BAAzD,EAAwF1B,OAAO;AAAE,aAAO,KAAKsB,SAAL,CAAetB,GAAf,CAAP;AAA6B,KAA9H;AACA,SAAKyB,KAAL,CAAW,MAAX,EAAkB,iBAAlB,EAAqC9B,WAAW+B,6BAAhD,EAA+E1B,OAAO;AAAE,aAAO,KAAK2B,YAAL,CAAkB3B,GAAlB,CAAP;AAAgC,KAAxH;AACA,SAAKyB,KAAL,CAAW,KAAX,EAAiB,2BAAjB,EAA8C9B,WAAW+B,6BAAzD,EAAwF1B,OAAO;AAAE,aAAO,KAAK4B,YAAL,CAAkB5B,GAAlB,CAAP;AAAgC,KAAjI;AACA,SAAKyB,KAAL,CAAW,QAAX,EAAoB,2BAApB,EAAiD9B,WAAW+B,6BAA5D,EAA2F1B,OAAO;AAAE,aAAO,KAAK6B,YAAL,CAAkB7B,GAAlB,CAAP;AAAgC,KAApI;AACD;AApCgD;;QAAtCJ,e,GAAAA,e;kBAuCEA,e","file":"AudiencesRouter.js","sourcesContent":["import ClassesRouter from './ClassesRouter';\nimport rest from '../rest';\nimport * as middleware from '../middlewares';\n\nexport class AudiencesRouter extends ClassesRouter {\n\n  className() {\n    return '_Audience';\n  }\n\n  handleFind(req) {\n    const body = Object.assign(req.body, ClassesRouter.JSONFromQuery(req.query));\n    const options = ClassesRouter.optionsFromBody(body);\n\n    return rest.find(req.config, req.auth, '_Audience', body.where, options, req.info.clientSDK)\n      .then((response) => {\n\n        response.results.forEach((item) => {\n          item.query = JSON.parse(item.query);\n        });\n\n        return {response: response};\n      });\n  }\n\n  handleGet(req) {\n    return super.handleGet(req)\n      .then((data) => {\n        data.response.query = JSON.parse(data.response.query);\n\n        return data;\n      });\n  }\n\n  mountRoutes() {\n    this.route('GET','/push_audiences', middleware.promiseEnforceMasterKeyAccess, req => { return this.handleFind(req); });\n    this.route('GET','/push_audiences/:objectId', middleware.promiseEnforceMasterKeyAccess, req => { return this.handleGet(req); });\n    this.route('POST','/push_audiences', middleware.promiseEnforceMasterKeyAccess, req => { return this.handleCreate(req); });\n    this.route('PUT','/push_audiences/:objectId', middleware.promiseEnforceMasterKeyAccess, req => { return this.handleUpdate(req); });\n    this.route('DELETE','/push_audiences/:objectId', middleware.promiseEnforceMasterKeyAccess, req => { return this.handleDelete(req); });\n  }\n}\n\nexport default AudiencesRouter;\n"]}