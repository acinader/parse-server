{"version":3,"sources":["../../src/Routers/ClassesRouter.js"],"names":["ALLOWED_GET_QUERY_KEYS","ClassesRouter","PromiseRouter","className","req","params","handleFind","body","Object","assign","JSONFromQuery","query","options","optionsFromBody","config","maxLimit","limit","Number","redirectClassNameForKey","String","where","JSON","parse","rest","find","auth","info","clientSDK","then","response","handleGet","key","keys","indexOf","Parse","Error","INVALID_QUERY","include","get","objectId","results","length","OBJECT_NOT_FOUND","sessionToken","user","id","handleCreate","create","handleUpdate","update","handleDelete","del","json","value","_","entries","e","allowConstraints","skip","order","count","includeAll","mountRoutes","route"],"mappings":"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","file":"ClassesRouter.js","sourcesContent":["\nimport PromiseRouter from '../PromiseRouter';\nimport rest          from '../rest';\nimport _             from 'lodash';\nimport Parse         from 'parse/node';\n\nconst ALLOWED_GET_QUERY_KEYS = ['keys', 'include'];\n\nexport class ClassesRouter extends PromiseRouter {\n\n  className(req) {\n    return req.params.className;\n  }\n\n  handleFind(req) {\n    const body = Object.assign(req.body, ClassesRouter.JSONFromQuery(req.query));\n    const options = ClassesRouter.optionsFromBody(body);\n    if (req.config.maxLimit && (body.limit > req.config.maxLimit)) {\n      // Silently replace the limit on the query with the max configured\n      options.limit = Number(req.config.maxLimit);\n    }\n    if (body.redirectClassNameForKey) {\n      options.redirectClassNameForKey = String(body.redirectClassNameForKey);\n    }\n    if (typeof body.where === 'string') {\n      body.where = JSON.parse(body.where);\n    }\n    return rest.find(req.config, req.auth, this.className(req), body.where, options, req.info.clientSDK)\n      .then((response) => {\n        return { response: response };\n      });\n  }\n\n  // Returns a promise for a {response} object.\n  handleGet(req) {\n    const body = Object.assign(req.body, ClassesRouter.JSONFromQuery(req.query));\n    const options = {};\n\n    for (const key of Object.keys(body)) {\n      if (ALLOWED_GET_QUERY_KEYS.indexOf(key) === -1) {\n        throw new Parse.Error(Parse.Error.INVALID_QUERY, 'Improper encode of parameter');\n      }\n    }\n\n    if (typeof body.keys == 'string') {\n      options.keys = body.keys;\n    }\n    if (body.include) {\n      options.include = String(body.include);\n    }\n\n    return rest.get(req.config, req.auth, this.className(req), req.params.objectId, options, req.info.clientSDK)\n      .then((response) => {\n        if (!response.results || response.results.length == 0) {\n          throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Object not found.');\n        }\n\n        if (this.className(req) === \"_User\") {\n\n          delete response.results[0].sessionToken;\n\n          const user =  response.results[0];\n\n          if (req.auth.user && user.objectId == req.auth.user.id) {\n            // Force the session token\n            response.results[0].sessionToken = req.info.sessionToken;\n          }\n        }\n        return { response: response.results[0] };\n      });\n  }\n\n  handleCreate(req) {\n    return rest.create(req.config, req.auth, this.className(req), req.body, req.info.clientSDK);\n  }\n\n  handleUpdate(req) {\n    const where = { objectId: req.params.objectId }\n    return rest.update(req.config, req.auth, this.className(req), where, req.body, req.info.clientSDK);\n  }\n\n  handleDelete(req) {\n    return rest.del(req.config, req.auth, this.className(req), req.params.objectId, req.info.clientSDK)\n      .then(() => {\n        return {response: {}};\n      });\n  }\n\n  static JSONFromQuery(query) {\n    const json = {};\n    for (const [key, value] of _.entries(query)) {\n      try {\n        json[key] = JSON.parse(value);\n      } catch (e) {\n        json[key] = value;\n      }\n    }\n    return json\n  }\n\n  static optionsFromBody(body) {\n    const allowConstraints = ['skip', 'limit', 'order', 'count', 'keys',\n      'include', 'includeAll', 'redirectClassNameForKey', 'where'];\n\n    for (const key of Object.keys(body)) {\n      if (allowConstraints.indexOf(key) === -1) {\n        throw new Parse.Error(Parse.Error.INVALID_QUERY, `Invalid parameter for query: ${key}`);\n      }\n    }\n    const options = {};\n    if (body.skip) {\n      options.skip = Number(body.skip);\n    }\n    if (body.limit || body.limit === 0) {\n      options.limit = Number(body.limit);\n    } else {\n      options.limit = Number(100);\n    }\n    if (body.order) {\n      options.order = String(body.order);\n    }\n    if (body.count) {\n      options.count = true;\n    }\n    if (typeof body.keys == 'string') {\n      options.keys = body.keys;\n    }\n    if (body.include) {\n      options.include = String(body.include);\n    }\n    if (body.includeAll) {\n      options.includeAll = true;\n    }\n    return options;\n  }\n\n  mountRoutes() {\n    this.route('GET', '/classes/:className', (req) => { return this.handleFind(req); });\n    this.route('GET', '/classes/:className/:objectId', (req) => { return this.handleGet(req); });\n    this.route('POST', '/classes/:className', (req) => { return this.handleCreate(req); });\n    this.route('PUT', '/classes/:className/:objectId', (req) => { return this.handleUpdate(req); });\n    this.route('DELETE',  '/classes/:className/:objectId', (req) => { return this.handleDelete(req); });\n  }\n}\n\nexport default ClassesRouter;\n"]}