{"version":3,"sources":["../../src/LiveQuery/Client.js"],"names":["dafaultFields","Client","constructor","id","parseWebSocket","hasMasterKey","roles","subscriptionInfos","Map","pushConnect","_pushEvent","pushSubscribe","pushUnsubscribe","pushCreate","pushEnter","pushUpdate","pushDelete","pushLeave","pushResponse","message","logger","verbose","send","pushError","code","error","reconnect","JSON","stringify","addSubscriptionInfo","requestId","subscriptionInfo","set","getSubscriptionInfo","get","deleteSubscriptionInfo","delete","type","subscriptionId","parseObjectJSON","response","fields","has","_toJSONWithFields","limitedParseObject","field"],"mappings":"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","file":"Client.js","sourcesContent":["import logger from '../logger';\n\nimport type { FlattenedObjectData } from './Subscription';\nexport type Message = { [attr: string]: any };\n\nconst dafaultFields = ['className', 'objectId', 'updatedAt', 'createdAt', 'ACL'];\n\nclass Client {\n  id: number;\n  parseWebSocket: any;\n  hasMasterKey: boolean;\n  userId: string;\n  roles: Array<string>;\n  subscriptionInfos: Object;\n  pushConnect: Function;\n  pushSubscribe: Function;\n  pushUnsubscribe: Function;\n  pushCreate: Function;\n  pushEnter: Function;\n  pushUpdate: Function;\n  pushDelete: Function;\n  pushLeave: Function;\n\n  constructor(id: number, parseWebSocket: any, hasMasterKey: boolean) {\n    this.id = id;\n    this.parseWebSocket = parseWebSocket;\n    this.hasMasterKey = hasMasterKey;\n    this.roles = [];\n    this.subscriptionInfos = new Map();\n    this.pushConnect = this._pushEvent('connected');\n    this.pushSubscribe = this._pushEvent('subscribed');\n    this.pushUnsubscribe = this._pushEvent('unsubscribed');\n    this.pushCreate = this._pushEvent('create');\n    this.pushEnter = this._pushEvent('enter');\n    this.pushUpdate = this._pushEvent('update');\n    this.pushDelete = this._pushEvent('delete');\n    this.pushLeave = this._pushEvent('leave');\n  }\n\n  static pushResponse(parseWebSocket: any, message: Message): void {\n    logger.verbose('Push Response : %j', message);\n    parseWebSocket.send(message);\n  }\n\n  static pushError(parseWebSocket: any, code: number, error: string, reconnect: boolean = true): void {\n    Client.pushResponse(parseWebSocket, JSON.stringify({\n      'op': 'error',\n      'error': error,\n      'code': code,\n      'reconnect': reconnect\n    }));\n  }\n\n  addSubscriptionInfo(requestId: number, subscriptionInfo: any): void {\n    this.subscriptionInfos.set(requestId, subscriptionInfo);\n  }\n\n  getSubscriptionInfo(requestId: number): any {\n    return this.subscriptionInfos.get(requestId);\n  }\n\n  deleteSubscriptionInfo(requestId: number): void {\n    return this.subscriptionInfos.delete(requestId);\n  }\n\n  _pushEvent(type: string): Function {\n    return function(subscriptionId: number, parseObjectJSON: any): void {\n      const response: Message = {\n        'op' : type,\n        'clientId' : this.id\n      };\n      if (typeof subscriptionId !== 'undefined') {\n        response['requestId'] = subscriptionId;\n      }\n      if (typeof parseObjectJSON !== 'undefined') {\n        let fields;\n        if (this.subscriptionInfos.has(subscriptionId)) {\n          fields = this.subscriptionInfos.get(subscriptionId).fields;\n        }\n        response['object'] = this._toJSONWithFields(parseObjectJSON, fields);\n      }\n      Client.pushResponse(this.parseWebSocket, JSON.stringify(response));\n    }\n  }\n\n  _toJSONWithFields(parseObjectJSON: any, fields: any): FlattenedObjectData {\n    if (!fields) {\n      return parseObjectJSON;\n    }\n    const limitedParseObject = {};\n    for (const field of dafaultFields) {\n      limitedParseObject[field] = parseObjectJSON[field];\n    }\n    for (const field of fields) {\n      if (field in parseObjectJSON) {\n        limitedParseObject[field] = parseObjectJSON[field];\n      }\n    }\n    return limitedParseObject;\n  }\n}\n\nexport {\n  Client\n}\n"]}