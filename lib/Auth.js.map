{"version":3,"sources":["../src/Auth.js"],"names":["cryptoUtils","require","RestQuery","Parse","Auth","config","isMaster","isReadOnly","user","installationId","userRoles","fetchedRoles","rolePromise","prototype","isUnauthenticated","master","readOnly","nobody","getAuthForSessionToken","sessionToken","cacheController","get","then","userJSON","cachedUser","Object","fromJSON","Promise","resolve","restOptions","limit","include","query","execute","response","results","length","Error","INVALID_SESSION_TOKEN","now","Date","expiresAt","iso","undefined","obj","password","put","userObject","getAuthForLegacySessionToken","className","getUserRoles","_loadRoles","cacheAdapter","role","id","cachedRoles","restWhere","__type","objectId","Array","rolesMap","reduce","m","r","names","push","name","ids","_getAllRolesNamesForRoleIds","roleNames","map","roleIDs","queriedRoles","ins","filter","roleID","Set","resultMap","memo","concat","createSession","userId","createdWith","additionalSessionData","token","newToken","generateSessionExpiresAt","sessionData","restricted","_encode","assign","RestWrite","module","exports"],"mappings":"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","file":"Auth.js","sourcesContent":["const cryptoUtils = require('./cryptoUtils');\nconst RestQuery = require('./RestQuery');\nconst Parse = require('parse/node');\n\n// An Auth object tells you who is requesting something and whether\n// the master key was used.\n// userObject is a Parse.User and can be null if there's no user.\nfunction Auth({ config, isMaster = false, isReadOnly = false, user, installationId } = {}) {\n  this.config = config;\n  this.installationId = installationId;\n  this.isMaster = isMaster;\n  this.user = user;\n  this.isReadOnly = isReadOnly;\n\n  // Assuming a users roles won't change during a single request, we'll\n  // only load them once.\n  this.userRoles = [];\n  this.fetchedRoles = false;\n  this.rolePromise = null;\n}\n\n// Whether this auth could possibly modify the given user id.\n// It still could be forbidden via ACLs even if this returns true.\nAuth.prototype.isUnauthenticated = function() {\n  if (this.isMaster) {\n    return false;\n  }\n  if (this.user) {\n    return false;\n  }\n  return true;\n};\n\n// A helper to get a master-level Auth object\nfunction master(config) {\n  return new Auth({ config, isMaster: true });\n}\n\n// A helper to get a master-level Auth object\nfunction readOnly(config) {\n  return new Auth({ config, isMaster: true, isReadOnly: true });\n}\n\n// A helper to get a nobody-level Auth object\nfunction nobody(config) {\n  return new Auth({ config, isMaster: false });\n}\n\n\n// Returns a promise that resolves to an Auth object\nvar getAuthForSessionToken = function({ config, sessionToken, installationId } = {}) {\n  return config.cacheController.user.get(sessionToken).then((userJSON) => {\n    if (userJSON) {\n      const cachedUser = Parse.Object.fromJSON(userJSON);\n      return Promise.resolve(new Auth({config, isMaster: false, installationId, user: cachedUser}));\n    }\n\n    var restOptions = {\n      limit: 1,\n      include: 'user'\n    };\n\n    var query = new RestQuery(config, master(config), '_Session', {sessionToken}, restOptions);\n    return query.execute().then((response) => {\n      var results = response.results;\n      if (results.length !== 1 || !results[0]['user']) {\n        throw new Parse.Error(Parse.Error.INVALID_SESSION_TOKEN, 'Invalid session token');\n      }\n\n      var now = new Date(),\n        expiresAt = results[0].expiresAt ? new Date(results[0].expiresAt.iso) : undefined;\n      if (expiresAt < now) {\n        throw new Parse.Error(Parse.Error.INVALID_SESSION_TOKEN,\n          'Session token is expired.');\n      }\n      var obj = results[0]['user'];\n      delete obj.password;\n      obj['className'] = '_User';\n      obj['sessionToken'] = sessionToken;\n      config.cacheController.user.put(sessionToken, obj);\n      const userObject = Parse.Object.fromJSON(obj);\n      return new Auth({config, isMaster: false, installationId, user: userObject});\n    });\n  });\n};\n\nvar getAuthForLegacySessionToken = function({config, sessionToken, installationId } = {}) {\n  var restOptions = {\n    limit: 1\n  };\n  var query = new RestQuery(config, master(config), '_User', { sessionToken: sessionToken}, restOptions);\n  return query.execute().then((response) => {\n    var results = response.results;\n    if (results.length !== 1) {\n      throw new Parse.Error(Parse.Error.INVALID_SESSION_TOKEN, 'invalid legacy session token');\n    }\n    const obj = results[0];\n    obj.className = '_User';\n    const userObject = Parse.Object.fromJSON(obj);\n    return new Auth({config, isMaster: false, installationId, user: userObject});\n  });\n}\n\n// Returns a promise that resolves to an array of role names\nAuth.prototype.getUserRoles = function() {\n  if (this.isMaster || !this.user) {\n    return Promise.resolve([]);\n  }\n  if (this.fetchedRoles) {\n    return Promise.resolve(this.userRoles);\n  }\n  if (this.rolePromise) {\n    return this.rolePromise;\n  }\n  this.rolePromise = this._loadRoles();\n  return this.rolePromise;\n};\n\n// Iterates through the role tree and compiles a users roles\nAuth.prototype._loadRoles = function() {\n  var cacheAdapter = this.config.cacheController;\n  return cacheAdapter.role.get(this.user.id).then((cachedRoles) => {\n    if (cachedRoles != null) {\n      this.fetchedRoles = true;\n      this.userRoles = cachedRoles;\n      return Promise.resolve(cachedRoles);\n    }\n\n    var restWhere = {\n      'users': {\n        __type: 'Pointer',\n        className: '_User',\n        objectId: this.user.id\n      }\n    };\n    // First get the role ids this user is directly a member of\n    var query = new RestQuery(this.config, master(this.config), '_Role', restWhere, {});\n    return query.execute().then((response) => {\n      var results = response.results;\n      if (!results.length) {\n        this.userRoles = [];\n        this.fetchedRoles = true;\n        this.rolePromise = null;\n\n        cacheAdapter.role.put(this.user.id, Array(...this.userRoles));\n        return Promise.resolve(this.userRoles);\n      }\n      var rolesMap = results.reduce((m, r) => {\n        m.names.push(r.name);\n        m.ids.push(r.objectId);\n        return m;\n      }, {ids: [], names: []});\n\n      // run the recursive finding\n      return this._getAllRolesNamesForRoleIds(rolesMap.ids, rolesMap.names)\n        .then((roleNames) => {\n          this.userRoles = roleNames.map((r) => {\n            return 'role:' + r;\n          });\n          this.fetchedRoles = true;\n          this.rolePromise = null;\n          cacheAdapter.role.put(this.user.id, Array(...this.userRoles));\n          return Promise.resolve(this.userRoles);\n        });\n    });\n  });\n};\n\n// Given a list of roleIds, find all the parent roles, returns a promise with all names\nAuth.prototype._getAllRolesNamesForRoleIds = function(roleIDs, names = [], queriedRoles = {}) {\n  const ins = roleIDs.filter((roleID) => {\n    return queriedRoles[roleID] !== true;\n  }).map((roleID) => {\n    // mark as queried\n    queriedRoles[roleID] = true;\n    return {\n      __type: 'Pointer',\n      className: '_Role',\n      objectId: roleID\n    }\n  });\n\n  // all roles are accounted for, return the names\n  if (ins.length == 0) {\n    return Promise.resolve([...new Set(names)]);\n  }\n  // Build an OR query across all parentRoles\n  let restWhere;\n  if (ins.length == 1) {\n    restWhere = { 'roles': ins[0] };\n  } else {\n    restWhere = { 'roles': { '$in': ins }}\n  }\n  const query = new RestQuery(this.config, master(this.config), '_Role', restWhere, {});\n  return query.execute().then((response) => {\n    var results = response.results;\n    // Nothing found\n    if (!results.length) {\n      return Promise.resolve(names);\n    }\n    // Map the results with all Ids and names\n    const resultMap = results.reduce((memo, role) => {\n      memo.names.push(role.name);\n      memo.ids.push(role.objectId);\n      return memo;\n    }, {ids: [], names: []});\n    // store the new found names\n    names = names.concat(resultMap.names);\n    // find the next ones, circular roles will be cut\n    return this._getAllRolesNamesForRoleIds(resultMap.ids, names, queriedRoles)\n  }).then((names) => {\n    return Promise.resolve([...new Set(names)])\n  })\n}\n\nconst createSession = function(config, {\n  userId,\n  createdWith,\n  installationId,\n  additionalSessionData,\n}) {\n  const token = 'r:' + cryptoUtils.newToken();\n  const expiresAt = config.generateSessionExpiresAt();\n  const sessionData = {\n    sessionToken: token,\n    user: {\n      __type: 'Pointer',\n      className: '_User',\n      objectId: userId\n    },\n    createdWith,\n    restricted: false,\n    expiresAt: Parse._encode(expiresAt)\n  };\n\n  if (installationId) {\n    sessionData.installationId = installationId\n  }\n\n  Object.assign(sessionData, additionalSessionData);\n  // We need to import RestWrite at this point for the cyclic dependency it has to it\n  const RestWrite = require('./RestWrite');\n\n  return {\n    sessionData,\n    createSession: () => new RestWrite(config, master(config), '_Session', null, sessionData).execute()\n  }\n}\n\nmodule.exports = {\n  Auth,\n  master,\n  nobody,\n  readOnly,\n  getAuthForSessionToken,\n  getAuthForLegacySessionToken,\n  createSession,\n};\n"]}