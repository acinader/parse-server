{"version":3,"sources":["../../src/Controllers/HooksController.js"],"names":["triggers","Parse","request","DefaultHooksCollectionName","HTTPAgents","http","Agent","keepAlive","https","HooksController","constructor","applicationId","databaseController","webhookKey","_applicationId","_webhookKey","database","load","_getHooks","then","hooks","forEach","hook","addHookToTriggers","getFunction","functionName","results","getFunctions","$exists","getTrigger","className","triggerName","getTriggers","deleteFunction","removeFunction","_removeHooks","deleteTrigger","removeTrigger","query","find","map","result","objectId","destroy","Promise","resolve","saveHook","url","Error","update","upsert","wrappedFunction","wrapToHTTPRequest","addTrigger","addFunction","addHook","createOrUpdateHook","aHook","Types","createHook","updateHook","key","req","res","jsonBody","i","object","toJSON","original","jsonRequest","headers","body","JSON","stringify","agent","startsWith","logger","warn","post","err","httpResponse","parse","e","error","code","partialResponse","substring","success","createdAt","updatedAt"],"mappings":"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","file":"HooksController.js","sourcesContent":["/** @flow weak */\n\nimport * as triggers        from \"../triggers\";\n// @flow-disable-next\nimport * as Parse           from \"parse/node\";\n// @flow-disable-next\nimport * as request         from \"request\";\nimport { logger }           from '../logger';\nimport http                 from 'http';\nimport https                from 'https';\n\nconst DefaultHooksCollectionName = \"_Hooks\";\nconst HTTPAgents = {\n  http: new http.Agent({ keepAlive: true }),\n  https: new https.Agent({ keepAlive: true }),\n}\n\nexport class HooksController {\n  _applicationId:string;\n  _webhookKey:string;\n  database: any;\n\n  constructor(applicationId:string, databaseController, webhookKey) {\n    this._applicationId = applicationId;\n    this._webhookKey = webhookKey;\n    this.database = databaseController;\n  }\n\n  load() {\n    return this._getHooks().then(hooks => {\n      hooks = hooks || [];\n      hooks.forEach((hook) => {\n        this.addHookToTriggers(hook);\n      });\n    });\n  }\n\n  getFunction(functionName) {\n    return this._getHooks({ functionName: functionName }).then(results => results[0]);\n  }\n\n  getFunctions() {\n    return this._getHooks({ functionName: { $exists: true } });\n  }\n\n  getTrigger(className, triggerName) {\n    return this._getHooks({ className: className, triggerName: triggerName }).then(results => results[0]);\n  }\n\n  getTriggers() {\n    return this._getHooks({ className: { $exists: true }, triggerName: { $exists: true } });\n  }\n\n  deleteFunction(functionName) {\n    triggers.removeFunction(functionName, this._applicationId);\n    return this._removeHooks({ functionName: functionName });\n  }\n\n  deleteTrigger(className, triggerName) {\n    triggers.removeTrigger(triggerName, className, this._applicationId);\n    return this._removeHooks({ className: className, triggerName: triggerName });\n  }\n\n  _getHooks(query = {}) {\n    return this.database.find(DefaultHooksCollectionName, query).then((results) => {\n      return results.map((result) => {\n        delete result.objectId;\n        return result;\n      });\n    });\n  }\n\n  _removeHooks(query) {\n    return this.database.destroy(DefaultHooksCollectionName, query).then(() => {\n      return Promise.resolve({});\n    });\n  }\n\n  saveHook(hook) {\n    var query;\n    if (hook.functionName && hook.url) {\n      query = { functionName: hook.functionName }\n    } else if (hook.triggerName && hook.className && hook.url) {\n      query = { className: hook.className, triggerName: hook.triggerName }\n    } else {\n      throw new Parse.Error(143, \"invalid hook declaration\");\n    }\n    return this.database.update(DefaultHooksCollectionName, query, hook, {upsert: true}).then(() => {\n      return Promise.resolve(hook);\n    })\n  }\n\n  addHookToTriggers(hook) {\n    var wrappedFunction = wrapToHTTPRequest(hook, this._webhookKey);\n    wrappedFunction.url = hook.url;\n    if (hook.className) {\n      triggers.addTrigger(hook.triggerName, hook.className, wrappedFunction, this._applicationId)\n    } else {\n      triggers.addFunction(hook.functionName, wrappedFunction, null, this._applicationId);\n    }\n  }\n\n  addHook(hook) {\n    this.addHookToTriggers(hook);\n    return this.saveHook(hook);\n  }\n\n  createOrUpdateHook(aHook) {\n    var hook;\n    if (aHook && aHook.functionName && aHook.url) {\n      hook = {};\n      hook.functionName = aHook.functionName;\n      hook.url = aHook.url;\n    } else if (aHook && aHook.className && aHook.url && aHook.triggerName && triggers.Types[aHook.triggerName]) {\n      hook = {};\n      hook.className = aHook.className;\n      hook.url = aHook.url;\n      hook.triggerName = aHook.triggerName;\n\n    } else {\n      throw new Parse.Error(143, \"invalid hook declaration\");\n    }\n\n    return this.addHook(hook);\n  }\n\n  createHook(aHook) {\n    if (aHook.functionName) {\n      return this.getFunction(aHook.functionName).then((result) => {\n        if (result) {\n          throw new Parse.Error(143, `function name: ${aHook.functionName} already exits`);\n        } else {\n          return this.createOrUpdateHook(aHook);\n        }\n      });\n    } else if (aHook.className && aHook.triggerName) {\n      return this.getTrigger(aHook.className, aHook.triggerName).then((result) => {\n        if (result) {\n          throw new Parse.Error(143, `class ${aHook.className} already has trigger ${aHook.triggerName}`);\n        }\n        return this.createOrUpdateHook(aHook);\n      });\n    }\n\n    throw new Parse.Error(143, \"invalid hook declaration\");\n  }\n\n  updateHook(aHook) {\n    if (aHook.functionName) {\n      return this.getFunction(aHook.functionName).then((result) => {\n        if (result) {\n          return this.createOrUpdateHook(aHook);\n        }\n        throw new Parse.Error(143, `no function named: ${aHook.functionName} is defined`);\n      });\n    } else if (aHook.className && aHook.triggerName) {\n      return this.getTrigger(aHook.className, aHook.triggerName).then((result) => {\n        if (result) {\n          return this.createOrUpdateHook(aHook);\n        }\n        throw new Parse.Error(143, `class ${aHook.className} does not exist`);\n      });\n    }\n    throw new Parse.Error(143, \"invalid hook declaration\");\n  }\n}\n\nfunction wrapToHTTPRequest(hook, key) {\n  return (req, res) => {\n    const jsonBody = {};\n    for (var i in req) {\n      jsonBody[i] = req[i];\n    }\n    if (req.object) {\n      jsonBody.object = req.object.toJSON();\n      jsonBody.object.className = req.object.className;\n    }\n    if (req.original) {\n      jsonBody.original = req.original.toJSON();\n      jsonBody.original.className = req.original.className;\n    }\n    const jsonRequest: any = {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(jsonBody),\n    };\n\n    const agent = hook.url.startsWith('https') ? HTTPAgents['https'] : HTTPAgents['http'];\n    jsonRequest.agent = agent;\n\n    if (key) {\n      jsonRequest.headers['X-Parse-Webhook-Key'] = key;\n    } else {\n      logger.warn('Making outgoing webhook request without webhookKey being set!');\n    }\n\n    request.post(hook.url, jsonRequest, function (err, httpResponse, body) {\n      var result;\n      if (body) {\n        if (typeof body === \"string\") {\n          try {\n            body = JSON.parse(body);\n          } catch (e) {\n            err = {\n              error: \"Malformed response\",\n              code: -1,\n              partialResponse: body.substring(0, 100)\n            };\n          }\n        }\n        if (!err) {\n          result = body.success;\n          err = body.error;\n        }\n      }\n\n      if (err) {\n        return res.error(err);\n      } else if (hook.triggerName === 'beforeSave') {\n        if (typeof result === 'object') {\n          delete result.createdAt;\n          delete result.updatedAt;\n        }\n        return res.success({object: result});\n      } else {\n        return res.success(result);\n      }\n    });\n  }\n}\n\nexport default HooksController;\n"]}