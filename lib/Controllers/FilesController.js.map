{"version":3,"sources":["../../src/Controllers/FilesController.js"],"names":["legacyFilesRegex","RegExp","FilesController","AdaptableController","getFileData","config","filename","adapter","createFile","data","contentType","extname","path","hasExtension","length","mime","getExtension","getType","location","getFileLocation","then","Promise","resolve","url","name","deleteFile","expandFilesInObject","object","Array","map","obj","key","fileObject","fileKey","undefined","indexOf","encodeURIComponent","test","expectedAdapterType","FilesAdapter","getFileStream"],"mappings":"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","file":"FilesController.js","sourcesContent":["// FilesController.js\nimport { randomHexString } from '../cryptoUtils';\nimport AdaptableController from './AdaptableController';\nimport { FilesAdapter } from '../Adapters/Files/FilesAdapter';\nimport path  from 'path';\nimport mime from 'mime';\n\nconst legacyFilesRegex = new RegExp(\"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}-.*\");\n\nexport class FilesController extends AdaptableController {\n\n  getFileData(config, filename) {\n    return this.adapter.getFileData(filename);\n  }\n\n  createFile(config, filename, data, contentType) {\n\n    const extname = path.extname(filename);\n\n    const hasExtension = extname.length > 0;\n\n    if (!hasExtension && contentType && mime.getExtension(contentType)) {\n      filename = filename + '.' + mime.getExtension(contentType);\n    } else if (hasExtension && !contentType) {\n      contentType = mime.getType(filename);\n    }\n\n    filename = randomHexString(32) + '_' + filename;\n\n    var location = this.adapter.getFileLocation(config, filename);\n    return this.adapter.createFile(filename, data, contentType).then(() => {\n      return Promise.resolve({\n        url: location,\n        name: filename\n      });\n    });\n  }\n\n  deleteFile(config, filename) {\n    return this.adapter.deleteFile(filename);\n  }\n\n  /**\n   * Find file references in REST-format object and adds the url key\n   * with the current mount point and app id.\n   * Object may be a single object or list of REST-format objects.\n   */\n  expandFilesInObject(config, object) {\n    if (object instanceof Array) {\n      object.map((obj) => this.expandFilesInObject(config, obj));\n      return;\n    }\n    if (typeof object !== 'object') {\n      return;\n    }\n    for (const key in object) {\n      const fileObject = object[key];\n      if (fileObject && fileObject['__type'] === 'File') {\n        if (fileObject['url']) {\n          continue;\n        }\n        const filename = fileObject['name'];\n        // all filenames starting with \"tfss-\" should be from files.parsetfss.com\n        // all filenames starting with a \"-\" seperated UUID should be from files.parse.com\n        // all other filenames have been migrated or created from Parse Server\n        if (config.fileKey === undefined) {\n          fileObject['url'] = this.adapter.getFileLocation(config, filename);\n        } else {\n          if (filename.indexOf('tfss-') === 0) {\n            fileObject['url'] = 'http://files.parsetfss.com/' + config.fileKey + '/' + encodeURIComponent(filename);\n          } else if (legacyFilesRegex.test(filename)) {\n            fileObject['url'] = 'http://files.parse.com/' + config.fileKey + '/' + encodeURIComponent(filename);\n          } else {\n            fileObject['url'] = this.adapter.getFileLocation(config, filename);\n          }\n        }\n      }\n    }\n  }\n\n  expectedAdapterType() {\n    return FilesAdapter;\n  }\n\n  getFileStream(config, filename) {\n    return this.adapter.getFileStream(filename);\n  }\n}\n\nexport default FilesController;\n"]}