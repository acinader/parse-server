{"version":3,"sources":["../../../src/cli/utils/runner.js"],"names":["definitions","help","usage","start","program","loadDefinitions","on","parse","process","argv","env","options","getOptions","logStartupOptions","key","value","JSON","stringify","e","constructor","name","console","log"],"mappings":";;;;;;kBAwBe,UAAS;AACtBA,aADsB;AAEtBC,MAFsB;AAGtBC,OAHsB;AAItBC;AAJsB,CAAT,EAKZ;AACDC,sBAAQC,eAAR,CAAwBL,WAAxB;AACA,MAAIE,KAAJ,EAAW;AACTE,wBAAQF,KAAR,CAAcA,KAAd;AACD;AACD,MAAID,IAAJ,EAAU;AACRG,wBAAQE,EAAR,CAAW,QAAX,EAAqBL,IAArB;AACD;AACDG,sBAAQG,KAAR,CAAcC,QAAQC,IAAtB,EAA4BD,QAAQE,GAApC;;AAEA,QAAMC,UAAUP,oBAAQQ,UAAR,EAAhB;AACAT,QAAMC,mBAAN,EAAeO,OAAf,EAAwB,YAAW;AACjCE,sBAAkBF,OAAlB;AACD,GAFD;AAGD,C;;AA1CD;;;;;;AAEA,SAASE,iBAAT,CAA2BF,OAA3B,EAAoC;AAClC,OAAK,MAAMG,GAAX,IAAkBH,OAAlB,EAA2B;AACzB,QAAII,QAAQJ,QAAQG,GAAR,CAAZ;AACA,QAAIA,OAAO,WAAX,EAAwB;AACtBC,cAAQ,gBAAR;AACD;AACD,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAI;AACFA,gBAAQC,KAAKC,SAAL,CAAeF,KAAf,CAAR;AACD,OAFD,CAEE,OAAMG,CAAN,EAAS;AACT,YAAIH,SAASA,MAAMI,WAAf,IAA8BJ,MAAMI,WAAN,CAAkBC,IAApD,EAA0D;AACxDL,kBAAQA,MAAMI,WAAN,CAAkBC,IAA1B;AACD;AACF;AACF;AACD;AACAC,YAAQC,GAAR,CAAa,GAAER,GAAI,KAAIC,KAAM,EAA7B;AACA;AACD;AACF","file":"runner.js","sourcesContent":["\nimport program from './commander';\n\nfunction logStartupOptions(options) {\n  for (const key in options) {\n    let value = options[key];\n    if (key == \"masterKey\") {\n      value = \"***REDACTED***\";\n    }\n    if (typeof value === 'object') {\n      try {\n        value = JSON.stringify(value)\n      } catch(e) {\n        if (value && value.constructor && value.constructor.name) {\n          value = value.constructor.name;\n        }\n      }\n    }\n    /* eslint-disable no-console */\n    console.log(`${key}: ${value}`);\n    /* eslint-enable no-console */\n  }\n}\n\nexport default function({\n  definitions,\n  help,\n  usage,\n  start\n}) {\n  program.loadDefinitions(definitions);\n  if (usage) {\n    program.usage(usage);\n  }\n  if (help) {\n    program.on('--help', help);\n  }\n  program.parse(process.argv, process.env);\n\n  const options = program.getOptions();\n  start(program, options, function() {\n    logStartupOptions(options);\n  });\n}\n"]}