{"version":3,"sources":["../../../src/cli/utils/commander.js"],"names":["_definitions","_reverseDefinitions","_defaults","Command","prototype","loadDefinitions","definitions","Object","keys","reduce","program","opt","additionalOptions","required","option","help","action","object","key","value","env","defs","default","on","console","log","forEach","parseEnvironment","options","originalKey","parseConfigFile","args","length","jsonPath","path","resolve","jsonConfig","require","apps","setValuesIfNeeded","hasOwnProperty","_parse","parse","envOptions","fromFile","getOptions"],"mappings":"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","file":"commander.js","sourcesContent":["/* eslint-disable no-console */\nimport { Command } from 'commander';\nimport path from 'path';\nlet _definitions;\nlet _reverseDefinitions;\nlet _defaults;\n\nCommand.prototype.loadDefinitions = function(definitions) {\n  _definitions = definitions;\n\n  Object.keys(definitions).reduce((program, opt) => {\n    if (typeof definitions[opt] == \"object\") {\n      const additionalOptions = definitions[opt];\n      if (additionalOptions.required === true) {\n        return program.option(`--${opt} <${opt}>`, additionalOptions.help, additionalOptions.action);\n      } else {\n        return program.option(`--${opt} [${opt}]`, additionalOptions.help, additionalOptions.action);\n      }\n    }\n    return program.option(`--${opt} [${opt}]`);\n  }, this);\n\n  _reverseDefinitions = Object.keys(definitions).reduce((object, key) => {\n    let value = definitions[key];\n    if (typeof value == \"object\") {\n      value = value.env;\n    }\n    if (value) {\n      object[value] = key;\n    }\n    return object;\n  }, {});\n\n  _defaults = Object.keys(definitions).reduce((defs, opt) => {\n    if(_definitions[opt].default) {\n      defs[opt] = _definitions[opt].default;\n    }\n    return defs;\n  }, {});\n\n  /* istanbul ignore next */\n  this.on('--help', function(){\n    console.log('  Configure From Environment:');\n    console.log('');\n    Object.keys(_reverseDefinitions).forEach((key) => {\n      console.log(`    $ ${key}='${_reverseDefinitions[key]}'`);\n    });\n    console.log('');\n  });\n};\n\nfunction parseEnvironment(env = {}) {\n  return Object.keys(_reverseDefinitions).reduce((options, key) => {\n    if (env[key]) {\n      const originalKey = _reverseDefinitions[key];\n      let action = (option) => (option);\n      if (typeof _definitions[originalKey] === \"object\") {\n        action = _definitions[originalKey].action || action;\n      }\n      options[_reverseDefinitions[key]] = action(env[key]);\n    }\n    return options;\n  }, {});\n}\n\nfunction parseConfigFile(program) {\n  let options = {};\n  if (program.args.length > 0) {\n    let jsonPath = program.args[0];\n    jsonPath = path.resolve(jsonPath);\n    const jsonConfig = require(jsonPath);\n    if (jsonConfig.apps) {\n      if (jsonConfig.apps.length > 1) {\n        throw 'Multiple apps are not supported';\n      }\n      options = jsonConfig.apps[0];\n    } else {\n      options = jsonConfig;\n    }\n    Object.keys(options).forEach((key) => {\n      const value = options[key];\n      if (!_definitions[key]) {\n        throw `error: unknown option ${key}`;\n      }\n      const action = _definitions[key].action;\n      if (action) {\n        options[key] = action(value);\n      }\n    });\n    console.log(`Configuration loaded from ${jsonPath}`)\n  }\n  return options;\n}\n\nCommand.prototype.setValuesIfNeeded = function(options) {\n  Object.keys(options).forEach((key) => {\n    if (!this.hasOwnProperty(key)) {\n      this[key] = options[key];\n    }\n  });\n};\n\nCommand.prototype._parse = Command.prototype.parse;\n\nCommand.prototype.parse = function(args, env) {\n  this._parse(args);\n  // Parse the environment first\n  const envOptions = parseEnvironment(env);\n  const fromFile = parseConfigFile(this);\n  // Load the env if not passed from command line\n  this.setValuesIfNeeded(envOptions);\n  // Load from file to override\n  this.setValuesIfNeeded(fromFile);\n  // Last set the defaults\n  this.setValuesIfNeeded(_defaults);\n};\n\nCommand.prototype.getOptions = function() {\n  return Object.keys(_definitions).reduce((options, key) => {\n    if (typeof this[key] !== 'undefined') {\n      options[key] = this[key];\n    }\n    return options;\n  }, {});\n};\n\nexport default new Command();\n/* eslint-enable no-console */\n"]}