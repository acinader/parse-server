{"version":3,"sources":["../../src/cli/parse-server.js"],"names":["help","console","log","definitions","usage","start","program","options","logOptions","appId","masterKey","outputHelp","error","process","exit","liveQuery","classNames","redisURL","cluster","numCPUs","os","cpus","length","isMaster","i","fork","on","worker","code","pid","ParseServer","serverURL"],"mappings":"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","file":"parse-server.js","sourcesContent":["/* eslint-disable no-console */\nimport ParseServer from '../index';\nimport definitions from './definitions/parse-server';\nimport cluster from 'cluster';\nimport os from 'os';\nimport runner from './utils/runner';\n\nconst help = function(){\n  console.log('  Get Started guide:');\n  console.log('');\n  console.log('    Please have a look at the get started guide!');\n  console.log('    http://docs.parseplatform.org/parse-server/guide/');\n  console.log('');\n  console.log('');\n  console.log('  Usage with npm start');\n  console.log('');\n  console.log('    $ npm start -- path/to/config.json');\n  console.log('    $ npm start -- --appId APP_ID --masterKey MASTER_KEY --serverURL serverURL');\n  console.log('    $ npm start -- --appId APP_ID --masterKey MASTER_KEY --serverURL serverURL');\n  console.log('');\n  console.log('');\n  console.log('  Usage:');\n  console.log('');\n  console.log('    $ parse-server path/to/config.json');\n  console.log('    $ parse-server -- --appId APP_ID --masterKey MASTER_KEY --serverURL serverURL');\n  console.log('    $ parse-server -- --appId APP_ID --masterKey MASTER_KEY --serverURL serverURL');\n  console.log('');\n};\n\nrunner({\n  definitions,\n  help,\n  usage: '[options] <path/to/configuration.json>',\n  start: function(program, options, logOptions) {\n    if (!options.appId || !options.masterKey) {\n      program.outputHelp();\n      console.error(\"\");\n      console.error('\\u001b[31mERROR: appId and masterKey are required\\u001b[0m');\n      console.error(\"\");\n      process.exit(1);\n    }\n\n    if (options[\"liveQuery.classNames\"]) {\n      options.liveQuery = options.liveQuery || {};\n      options.liveQuery.classNames = options[\"liveQuery.classNames\"];\n      delete options[\"liveQuery.classNames\"];\n    }\n    if (options[\"liveQuery.redisURL\"]) {\n      options.liveQuery = options.liveQuery || {};\n      options.liveQuery.redisURL = options[\"liveQuery.redisURL\"];\n      delete options[\"liveQuery.redisURL\"];\n    }\n\n    if (options.cluster) {\n      const numCPUs = typeof options.cluster === 'number' ? options.cluster : os.cpus().length;\n      if (cluster.isMaster) {\n        logOptions();\n        for(let i = 0; i < numCPUs; i++) {\n          cluster.fork();\n        }\n        cluster.on('exit', (worker, code) => {\n          console.log(`worker ${worker.process.pid} died (${code})... Restarting`);\n          cluster.fork();\n        });\n      } else {\n        ParseServer.start(options, () => {\n          console.log('[' + process.pid + '] parse-server running on ' + options.serverURL);\n        });\n      }\n    } else {\n      ParseServer.start(options, () => {\n        logOptions();\n        console.log('');\n        console.log('[' + process.pid + '] parse-server running on ' + options.serverURL);\n      });\n    }\n  }\n});\n\n/* eslint-enable no-console */\n"]}