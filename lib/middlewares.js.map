{"version":3,"sources":["../src/middlewares.js"],"names":["handleParseHeaders","allowCrossDomain","allowMethodOverride","handleParseErrors","enforceMasterKeyAccess","promiseEnforceMasterKeyAccess","req","res","next","mountPathLength","originalUrl","length","url","mountPath","slice","mount","protocol","get","info","appId","sessionToken","masterKey","installationId","clientKey","javascriptKey","dotNetKey","restAPIKey","clientVersion","basicAuth","httpAuth","basicAuthAppId","AppCache","body","_noBody","fileViaJSON","Buffer","JSON","parse","_RevocableSession","_ApplicationId","_JavaScriptKey","_ClientVersion","_InstallationId","_SessionToken","_MasterKey","_ContentType","headers","invalidRequest","clientSDK","ClientSDK","fromString","base64","clientIp","getClientIp","app","config","Config","ip","masterKeyIps","indexOf","isMaster","auth","Auth","isReadOnlyMaster","readOnlyMasterKey","isReadOnly","keys","oneKeyConfigured","some","key","undefined","oneKeyMatches","Promise","resolve","then","getAuthForLegacySessionToken","getAuthForSessionToken","catch","error","Parse","Error","log","UNKNOWN_ERROR","split","connection","remoteAddress","socket","authorization","header","authPrefix","match","toLowerCase","encodedAuth","substring","credentials","decodeBase64","jsKeyPrefix","matchKey","str","toString","method","sendStatus","_method","originalMethod","err","httpStatus","code","INTERNAL_SERVER_ERROR","OBJECT_NOT_FOUND","status","json","message","stack","end","request"],"mappings":"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","file":"middlewares.js","sourcesContent":["import AppCache from './cache';\nimport log from './logger';\nimport Parse from 'parse/node';\nimport auth from './Auth';\nimport Config from './Config';\nimport ClientSDK from './ClientSDK';\n\n// Checks that the request is authorized for this app and checks user\n// auth too.\n// The bodyparser should run before this middleware.\n// Adds info to the request:\n// req.config - the Config for this app\n// req.auth - the Auth for this request\nexport function handleParseHeaders(req, res, next) {\n  var mountPathLength = req.originalUrl.length - req.url.length;\n  var mountPath = req.originalUrl.slice(0, mountPathLength);\n  var mount = req.protocol + '://' + req.get('host') + mountPath;\n\n  var info = {\n    appId: req.get('X-Parse-Application-Id'),\n    sessionToken: req.get('X-Parse-Session-Token'),\n    masterKey: req.get('X-Parse-Master-Key'),\n    installationId: req.get('X-Parse-Installation-Id'),\n    clientKey: req.get('X-Parse-Client-Key'),\n    javascriptKey: req.get('X-Parse-Javascript-Key'),\n    dotNetKey: req.get('X-Parse-Windows-Key'),\n    restAPIKey: req.get('X-Parse-REST-API-Key'),\n    clientVersion: req.get('X-Parse-Client-Version')\n  };\n\n  var basicAuth = httpAuth(req);\n\n  if (basicAuth) {\n    var basicAuthAppId = basicAuth.appId;\n    if (AppCache.get(basicAuthAppId)) {\n      info.appId = basicAuthAppId;\n      info.masterKey = basicAuth.masterKey || info.masterKey;\n      info.javascriptKey = basicAuth.javascriptKey || info.javascriptKey;\n    }\n  }\n\n  if (req.body) {\n    // Unity SDK sends a _noBody key which needs to be removed.\n    // Unclear at this point if action needs to be taken.\n    delete req.body._noBody;\n  }\n\n  var fileViaJSON = false;\n\n  if (!info.appId || !AppCache.get(info.appId)) {\n    // See if we can find the app id on the body.\n    if (req.body instanceof Buffer) {\n      // The only chance to find the app id is if this is a file\n      // upload that actually is a JSON body. So try to parse it.\n      req.body = JSON.parse(req.body);\n      fileViaJSON = true;\n    }\n\n    if (req.body) {\n      delete req.body._RevocableSession;\n    }\n\n    if (req.body &&\n      req.body._ApplicationId &&\n      AppCache.get(req.body._ApplicationId) &&\n      (!info.masterKey || AppCache.get(req.body._ApplicationId).masterKey === info.masterKey)\n    ) {\n      info.appId = req.body._ApplicationId;\n      info.javascriptKey = req.body._JavaScriptKey || '';\n      delete req.body._ApplicationId;\n      delete req.body._JavaScriptKey;\n      // TODO: test that the REST API formats generated by the other\n      // SDKs are handled ok\n      if (req.body._ClientVersion) {\n        info.clientVersion = req.body._ClientVersion;\n        delete req.body._ClientVersion;\n      }\n      if (req.body._InstallationId) {\n        info.installationId = req.body._InstallationId;\n        delete req.body._InstallationId;\n      }\n      if (req.body._SessionToken) {\n        info.sessionToken = req.body._SessionToken;\n        delete req.body._SessionToken;\n      }\n      if (req.body._MasterKey) {\n        info.masterKey = req.body._MasterKey;\n        delete req.body._MasterKey;\n      }\n      if (req.body._ContentType) {\n        req.headers['content-type'] = req.body._ContentType;\n        delete req.body._ContentType;\n      }\n    } else {\n      return invalidRequest(req, res);\n    }\n  }\n\n  if (info.clientVersion) {\n    info.clientSDK = ClientSDK.fromString(info.clientVersion);\n  }\n\n  if (fileViaJSON) {\n    // We need to repopulate req.body with a buffer\n    var base64 = req.body.base64;\n    req.body = new Buffer(base64, 'base64');\n  }\n\n  const clientIp = getClientIp(req);\n\n  info.app = AppCache.get(info.appId);\n  req.config = Config.get(info.appId, mount);\n  req.config.headers = req.headers || {};\n  req.config.ip = clientIp;\n  req.info = info;\n\n  if (info.masterKey && req.config.masterKeyIps && req.config.masterKeyIps.length !== 0 && req.config.masterKeyIps.indexOf(clientIp) === -1) {\n    return invalidRequest(req, res);\n  }\n\n  var isMaster = (info.masterKey === req.config.masterKey);\n\n  if (isMaster) {\n    req.auth = new auth.Auth({ config: req.config, installationId: info.installationId, isMaster: true });\n    next();\n    return;\n  }\n\n  var isReadOnlyMaster = (info.masterKey === req.config.readOnlyMasterKey);\n  if (typeof req.config.readOnlyMasterKey != 'undefined' && req.config.readOnlyMasterKey && isReadOnlyMaster) {\n    req.auth = new auth.Auth({ config: req.config, installationId: info.installationId, isMaster: true, isReadOnly: true });\n    next();\n    return;\n  }\n\n  // Client keys are not required in parse-server, but if any have been configured in the server, validate them\n  //  to preserve original behavior.\n  const keys = [\"clientKey\", \"javascriptKey\", \"dotNetKey\", \"restAPIKey\"];\n  const oneKeyConfigured = keys.some(function(key) {\n    return req.config[key] !== undefined;\n  });\n  const oneKeyMatches = keys.some(function(key){\n    return req.config[key] !== undefined && info[key] === req.config[key];\n  });\n\n  if (oneKeyConfigured && !oneKeyMatches) {\n    return invalidRequest(req, res);\n  }\n\n  if (req.url == \"/login\") {\n    delete info.sessionToken;\n  }\n\n  if (!info.sessionToken) {\n    req.auth = new auth.Auth({ config: req.config, installationId: info.installationId, isMaster: false });\n    next();\n    return;\n  }\n\n  return Promise.resolve().then(() => {\n    // handle the upgradeToRevocableSession path on it's own\n    if (info.sessionToken &&\n        req.url === '/upgradeToRevocableSession' &&\n        info.sessionToken.indexOf('r:') != 0) {\n      return auth.getAuthForLegacySessionToken({ config: req.config, installationId: info.installationId, sessionToken: info.sessionToken })\n    } else {\n      return auth.getAuthForSessionToken({ config: req.config, installationId: info.installationId, sessionToken: info.sessionToken })\n    }\n  }).then((auth) => {\n    if (auth) {\n      req.auth = auth;\n      next();\n    }\n  })\n    .catch((error) => {\n      if(error instanceof Parse.Error) {\n        next(error);\n        return;\n      }\n      else {\n        // TODO: Determine the correct error scenario.\n        log.error('error getting auth for sessionToken', error);\n        throw new Parse.Error(Parse.Error.UNKNOWN_ERROR, error);\n      }\n    });\n}\n\nfunction getClientIp(req){\n  if (req.headers['x-forwarded-for']) {\n    // try to get from x-forwared-for if it set (behind reverse proxy)\n    return req.headers['x-forwarded-for'].split(',')[0];\n  } else if (req.connection && req.connection.remoteAddress) {\n    // no proxy, try getting from connection.remoteAddress\n    return req.connection.remoteAddress;\n  } else if (req.socket) {\n    // try to get it from req.socket\n    return req.socket.remoteAddress;\n  } else if (req.connection && req.connection.socket) {\n    // try to get it form the connection.socket\n    return req.connection.socket.remoteAddress;\n  } else {\n    // if non above, fallback.\n    return req.ip;\n  }\n}\n\nfunction httpAuth(req) {\n  if (!(req.req || req).headers.authorization)\n    return ;\n\n  var header = (req.req || req).headers.authorization;\n  var appId, masterKey, javascriptKey;\n\n  // parse header\n  var authPrefix = 'basic ';\n\n  var match = header.toLowerCase().indexOf(authPrefix);\n\n  if (match == 0) {\n    var encodedAuth = header.substring(authPrefix.length, header.length);\n    var credentials = decodeBase64(encodedAuth).split(':');\n\n    if (credentials.length == 2) {\n      appId = credentials[0];\n      var key = credentials[1];\n\n      var jsKeyPrefix = 'javascript-key=';\n\n      var matchKey = key.indexOf(jsKeyPrefix)\n      if (matchKey == 0) {\n        javascriptKey = key.substring(jsKeyPrefix.length, key.length);\n      }\n      else {\n        masterKey = key;\n      }\n    }\n  }\n\n  return {appId: appId, masterKey: masterKey, javascriptKey: javascriptKey};\n}\n\nfunction decodeBase64(str) {\n  return new Buffer(str, 'base64').toString()\n}\n\nexport function allowCrossDomain(req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n  res.header('Access-Control-Allow-Headers', 'X-Parse-Master-Key, X-Parse-REST-API-Key, X-Parse-Javascript-Key, X-Parse-Application-Id, X-Parse-Client-Version, X-Parse-Session-Token, X-Requested-With, X-Parse-Revocable-Session, Content-Type');\n\n  // intercept OPTIONS method\n  if ('OPTIONS' == req.method) {\n    res.sendStatus(200);\n  }\n  else {\n    next();\n  }\n}\n\nexport function allowMethodOverride(req, res, next) {\n  if (req.method === 'POST' && req.body._method) {\n    req.originalMethod = req.method;\n    req.method = req.body._method;\n    delete req.body._method;\n  }\n  next();\n}\n\nexport function handleParseErrors(err, req, res, next) {\n  if (err instanceof Parse.Error) {\n    let httpStatus;\n    // TODO: fill out this mapping\n    switch (err.code) {\n    case Parse.Error.INTERNAL_SERVER_ERROR:\n      httpStatus = 500;\n      break;\n    case Parse.Error.OBJECT_NOT_FOUND:\n      httpStatus = 404;\n      break;\n    default:\n      httpStatus = 400;\n    }\n\n    res.status(httpStatus);\n    res.json({ code: err.code, error: err.message });\n    log.error(err.message, err);\n  } else if (err.status && err.message) {\n    res.status(err.status);\n    res.json({ error: err.message });\n    next(err);\n  } else {\n    log.error('Uncaught internal server error.', err, err.stack);\n    res.status(500);\n    res.json({\n      code: Parse.Error.INTERNAL_SERVER_ERROR,\n      message: 'Internal server error.'\n    });\n    next(err);\n  }\n\n}\n\nexport function enforceMasterKeyAccess(req, res, next) {\n  if (!req.auth.isMaster) {\n    res.status(403);\n    res.end('{\"error\":\"unauthorized: master key is required\"}');\n    return;\n  }\n  next();\n}\n\nexport function promiseEnforceMasterKeyAccess(request) {\n  if (!request.auth.isMaster) {\n    const error = new Error();\n    error.status = 403;\n    error.message = \"unauthorized: master key is required\";\n    throw error;\n  }\n  return Promise.resolve();\n}\n\nfunction invalidRequest(req, res) {\n  res.status(403);\n  res.end('{\"error\":\"unauthorized\"}');\n}\n"]}